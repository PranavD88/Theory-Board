During the final sprint of our project, I made a strong effort to stay engaged and contribute to the best of my ability. My main focus was on keeping up with the progress of my teammates and trying to stay aligned with the direction of the overall work. While I may not have taken the lead on major feature implementations, I actively worked to follow along with updates, contribute where I could, and remain involved in the team’s workflow.

However, I encountered several challenges during this phase, especially related to version control and merging code. One of the most significant obstacles I faced was the difficulty of merging my work with the main branch. I realized that Git is a very powerful tool, but also quite sensitive. If branches are not kept up-to-date or if everyone’s environment is not aligned, even small differences can cause major issues during the merge process. I also came across new Git commands that I wasn’t familiar with, which sometimes made things more confusing and could even make the situation worse if used incorrectly.

These difficulties made me realize how important it is for all team members to stay synchronized, not only in the code they write but also in the tools and commands they use. Successful merging requires consistency and communication, and I now understand that failing to keep everything organized across branches can lead to broken functionality and delays.

In reflection, I’ve learned a lot from this project, especially about the complexity of collaborative software development. I wish I had more experience going in, particularly with Git and with technical communication. Moving forward, I know I need to improve my language skills, deepen my understanding of development tools, and be more proactive in communicating with my teammates to prevent issues before they arise.