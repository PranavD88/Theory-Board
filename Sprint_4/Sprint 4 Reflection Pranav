During Sprint 4 of the PKMS project, I made significant progress in the functionality of notes and some other features. The key additions I had included were rich text editing, resizing and repositioning of notes, and an upgraded tagging system. On top of that, I reorganized the files so that the inline styles are now in separate CSS folders, making the project more readable and clutter-free.
I added a rich text editing system through TipTap, ensuring that it worked with our existing data structure. This created better usability for all users. I upgraded the tagging system so that users are now able to edit and delete tags after creation. Allowing for better tagging functionality. Lastly, by adding the resizing and repositioning of notes, this makes the website function better for any users who need to do it. This will go well with the feature of opening multiple notes once it is added.
Some challenges I faced were the exporting system and the CSS conflicts with the resizing of notes. PDF files and DOCX files have their own styles, so I had to maintain the consistency between the in-app view and the exported versions, which took some error and trial to accomplish. I also ran into layout issues with the CSSas mentioned before. Many elements were sized incorrectly and overlapping wrong, so I went through and fixed these by making sure everything was sized properly and tweaking the z-index rules.
During this sprint, I learned more about handling file operations on both the frontend and backend. I got more comfortable with creating CSS files and straying away from inline styles. On top of that, I also got comfortable with TipTap, which is what I used for the rich text editor in the notes. 
For the next time, I think I could do a better job of planning out the components and interactions ahead of time so that they do not conflict with each other. Some of the bugs could have been avoided by some more upfront design thinking.
